version: 0.2

env:
  parameter-store:
    # CodeBuildプロジェクトの環境変数でAWSアカウントIDを設定してください
    # 例: AWS_ACCOUNT_ID = 123456789012

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      # $IMAGE_REPO_NAME と $IMAGE_TAG はCodeBuildの環境変数で設定します
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG -f deploy/Dockerfile .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
      # CodePipelineが後続のデプロイステージで使用するアーティファクトを作成
      # CONTAINER_NAMEはCodeBuildの環境変数で設定します
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG" > imagedefinitions.json
      - echo Generating appspec.yml with dynamic container name...
      # appspec.ymlを動的に生成
      - |
        cat > appspec.yml << EOF
        version: 0.0
        Resources:
          - TargetService:
              Type: AWS::ECS::Service
              Properties:
                TaskDefinition: <TASK_DEFINITION>
                LoadBalancerInfo:
                  ContainerName: "$CONTAINER_NAME"
                  ContainerPort: 3000
        EOF

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yml
